# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: FirstApp CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  - name: Deploy Docker
  # You may pin to the exact commit or the version.
  # uses: sidikfaha/deploy-docker@1a9dd6263c592b3d399f5974f60b7af921f914b3
  uses: sidikfaha/deploy-docker@v1.0.1
  with:
    # Indicate the ssh server address to deploy on. It could be an EC2, GCE or any server instance on the cloud
    ssh-server: 
    # Provide a valid private key to be able to connect to the server
    ssh-private-key: 
    # Provide the environment variables you want to set to the container
    env: # optional, default is 
    # The image you want to deploy (owner/image_name:tag). If it's a private image, make sure the server is logged in to the right docker account.
    image: 
    # The name to attribute to the container
    container-name: 
    # Forward a port
    port: 
          
